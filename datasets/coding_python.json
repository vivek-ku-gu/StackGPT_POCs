[
    {"prompt": "Implement a Python function named `factorial` that takes an integer `n` as input and returns its factorial. The factorial of a non-negative integer `n`, denoted by `n!`, is the product of all positive integers less than or equal to `n`. For example, 5! = 5 * 4 * 3 * 2 * 1 = 120. If `n` is negative, the function should return `None`.\n\n**Example Usage:**\n```python\nprint(factorial(5))  # Output: 120\nprint(factorial(-3))  # Output: None\n```", "length": 227},
    {"prompt": "Write a Python function named `reverse_string` that takes a string as input and returns the reverse of that string. For example, if the input string is `'hello'`, the function should return `'olleh'`.\n\n**Example Usage:**\n```python\nprint(reverse_string('hello'))  # Output: 'olleh'\nprint(reverse_string(''))  # Output: ''\n```", "length": 150},
    {"prompt": "Create a Python function called `find_max` that takes a list of numbers as input and returns the maximum value in the list. If the list is empty, the function should return `None`.\n\n**Example Usage:**\n```python\nprint(find_max([1, 5, 2, 9, 10]))  # Output: 10\nprint(find_max([]))  # Output: None\n```", "length": 156},
    {"prompt": "Write a Python function named `check_prime` that takes an integer `n` as input and returns `True` if `n` is a prime number, otherwise `False`. A prime number is a natural number greater than 1 that has no positive divisors other than 1 and itself.\n\n**Example Usage:**\n```python\nprint(check_prime(7))  # Output: True\nprint(check_prime(12))  # Output: False\n```", "length": 215},
    {"prompt": "Implement a Python function called `fibonacci` that takes an integer `n` as input and returns the `n`-th Fibonacci number. The Fibonacci sequence is a series of numbers where each number is the sum of the two preceding ones, usually starting with 0 and 1. For example, the first few numbers of the Fibonacci sequence are: 0, 1, 1, 2, 3, 5, 8, 13, ...\n\n**Example Usage:**\n```python\nprint(fibonacci(5))  # Output: 5\n```", "length": 233},
    {"prompt": "Write a Python function named `merge_lists` that takes two sorted lists as input and returns a new sorted list containing all the elements from both lists. For example, if the input lists are `[1, 3, 5]` and `[2, 4, 6]`, the function should return `[1, 2, 3, 4, 5, 6]`.\n\n**Example Usage:**\n```python\nprint(merge_lists([1, 3, 5], [2, 4, 6]))  # Output: [1, 2, 3, 4, 5, 6]\n```", "length": 210},
    {"prompt": "Create a Python function called `find_common_elements` that takes two lists as input and returns a new list containing all the elements that are common to both lists. For example, if the input lists are `[1, 2, 3, 4]` and `[2, 4, 6]`, the function should return `[2, 4]`.\n\n**Example Usage:**\n```python\nprint(find_common_elements([1, 2, 3, 4], [2, 4, 6]))  # Output: [2, 4]\n```", "length": 201},
    {"prompt": "Implement a Python function named `is_palindrome` that takes a string as input and returns `True` if the string is a palindrome, otherwise `False`. A palindrome is a word, phrase, or sequence that reads the same forward as backward, e.g., 'madam' or 'racecar'.\n\n**Example Usage:**\n```python\nprint(is_palindrome('racecar'))  # Output: True\nprint(is_palindrome('hello'))  # Output: False\n```", "length": 225},
    {"prompt": "Write a Python function named `count_vowels` that takes a string as input and returns the number of vowels in the string. Vowels are the letters 'a', 'e', 'i', 'o', and 'u'.\n\n**Example Usage:**\n```python\nprint(count_vowels('hello'))  # Output: 2\n```", "length": 150},
    {"prompt": "Create a Python function called `find_missing_number` that takes a list of numbers from 1 to `n` (inclusive) with one number missing, and returns the missing number. For example, if the input list is `[1, 2, 4, 3, 6]`, the function should return `5`.\n\n**Example Usage:**\n```python\nprint(find_missing_number([1, 2, 4, 3, 6]))  # Output: 5\n```", "length": 210},
    {"prompt": "Implement a Python function named `rotate_list` that takes a list and a number `k` as input and rotates the list to the right by `k` positions. For example, if the input list is `[1, 2, 3, 4, 5]` and `k` is 2, the function should return `[4, 5, 1, 2, 3]`.\n\n**Example Usage:**\n```python\nprint(rotate_list([1, 2, 3, 4, 5], 2))  # Output: [4, 5, 1, 2, 3]\n```", "length": 220},
    {"prompt": "Write a Python function named `find_duplicates` that takes a list as input and returns a list of all the duplicate elements in the input list. For example, if the input list is `[1, 2, 3, 2, 4, 1]`, the function should return `[1, 2]`.\n\n**Example Usage:**\n```python\nprint(find_duplicates([1, 2, 3, 2, 4, 1]))  # Output: [1, 2]\n```", "length": 193},
    {"prompt": "Create a Python function called `find_longest_word` that takes a string of words as input (separated by spaces) and returns the longest word in the string. If there are multiple longest words, return the first one.\n\n**Example Usage:**\n```python\nprint(find_longest_word('This is a sentence with some words'))  # Output: 'sentence'\n```", "length": 204},
    {"prompt": "Implement a Python function named `is_anagram` that takes two strings as input and returns `True` if they are anagrams of each other, otherwise `False`. Anagrams are words or phrases formed by rearranging the letters of another word or phrase, using all the original letters exactly once.\n\n**Example Usage:**\n```python\nprint(is_anagram('listen', 'silent'))  # Output: True\nprint(is_anagram('hello', 'world'))  # Output: False\n```", "length": 263},
    {"prompt": "Write a Python function named `find_second_largest` that takes a list of numbers as input and returns the second-largest number in the list. If the list has less than two elements, the function should return `None`.\n\n**Example Usage:**\n```python\nprint(find_second_largest([1, 5, 2, 9, 10]))  # Output: 9\n```", "length": 190},
    {"prompt": "Implement a Java method named `isPrime` that takes an integer `n` as input and returns `true` if `n` is a prime number, otherwise returns `false`. A prime number is a natural number greater than 1 that has no positive divisors other than 1 and itself.\n\n**Example Usage:**\n```java\nSystem.out.println(isPrime(7));  // Output: true\nSystem.out.println(isPrime(10)); // Output: false\n```", "length": 220},
    {"prompt": "Write a Java method named `findMax` that takes an array of integers as input and returns the maximum value in the array. If the array is empty, the method should throw an `IllegalArgumentException`.\n\n**Example Usage:**\n```java\nint[] arr = {3, 5, 7, 2};\nSystem.out.println(findMax(arr));  // Output: 7\n```", "length": 190},
    {"prompt": "Create a Java method named `reverseArray` that takes an array of integers as input and returns a new array with the elements in reverse order.\n\n**Example Usage:**\n```java\nint[] arr = {1, 2, 3, 4};\nSystem.out.println(Arrays.toString(reverseArray(arr)));  // Output: [4, 3, 2, 1]\n```", "length": 180},
    {"prompt": "Implement a Java method named `fibonacci` that takes an integer `n` as input and returns the `n`-th Fibonacci number. The Fibonacci sequence is defined as F(0) = 0, F(1) = 1, and F(n) = F(n-1) + F(n-2) for n > 1.\n\n**Example Usage:**\n```java\nSystem.out.println(fibonacci(5));  // Output: 5\nSystem.out.println(fibonacci(10)); // Output: 55\n```", "length": 220},
    {"prompt": "Write a Java method named `isPalindrome` that takes a string as input and returns `true` if the string is a palindrome, otherwise returns `false`. A palindrome is a string that reads the same backward as forward, ignoring case and non-alphanumeric characters.\n\n**Example Usage:**\n```java\nSystem.out.println(isPalindrome(\"A man, a plan, a canal, Panama\"));  // Output: true\nSystem.out.println(isPalindrome(\"Hello, World!\"));  // Output: false\n```", "length": 230},
    {"prompt": "Create a Java method named `countVowels` that takes a string as input and returns the number of vowels (a, e, i, o, u) in the string, ignoring case.\n\n**Example Usage:**\n```java\nSystem.out.println(countVowels(\"Hello, World!\"));  // Output: 3\nSystem.out.println(countVowels(\"Java Programming\"));  // Output: 5\n```", "length": 190},
    {"prompt": "Implement a Java method named `binarySearch` that takes a sorted array of integers and a target value as input and returns the index of the target value in the array. If the target value is not found, the method should return -1.\n\n**Example Usage:**\n```java\nint[] arr = {1, 2, 3, 4, 5};\nSystem.out.println(binarySearch(arr, 3));  // Output: 2\nSystem.out.println(binarySearch(arr, 6));  // Output: -1\n```", "length": 220},
    {"prompt": "Write a Java method named `removeDuplicates` that takes an array of integers as input and returns a new array with duplicate elements removed. The order of elements should be preserved.\n\n**Example Usage:**\n```java\nint[] arr = {1, 2, 2, 3, 4, 4, 5};\nSystem.out.println(Arrays.toString(removeDuplicates(arr)));  // Output: [1, 2, 3, 4, 5]\n```", "length": 190},
    {"prompt": "Create a Java method named `isAnagram` that takes two strings as input and returns `true` if the strings are anagrams of each other, otherwise returns `false`. An anagram is a word or phrase formed by rearranging the letters of another, using all the original letters exactly once.\n\n**Example Usage:**\n```java\nSystem.out.println(isAnagram(\"listen\", \"silent\"));  // Output: true\nSystem.out.println(isAnagram(\"hello\", \"world\"));  // Output: false\n```", "length": 220},
    {"prompt": "Implement a Java method named `findMissingNumber` that takes an array of integers containing numbers from 1 to `n` with one number missing and returns the missing number.\n\n**Example Usage:**\n```java\nint[] arr = {1, 2, 4, 5};\nSystem.out.println(findMissingNumber(arr));  // Output: 3\n```", "length": 170},
    {"prompt": "Write a Java method named `rotateArray` that takes an array of integers and an integer `k` as input and returns a new array with the elements rotated to the right by `k` steps.\n\n**Example Usage:**\n```java\nint[] arr = {1, 2, 3, 4, 5};\nSystem.out.println(Arrays.toString(rotateArray(arr, 2)));  // Output: [4, 5, 1, 2, 3]\n```", "length": 190},
    {"prompt": "Create a Java method named `findSecondLargest` that takes an array of integers as input and returns the second largest element in the array. If the array has fewer than two elements, the method should throw an `IllegalArgumentException`.\n\n**Example Usage:**\n```java\nint[] arr = {3, 5, 7, 2};\nSystem.out.println(findSecondLargest(arr));  // Output: 5\n```", "length": 200},
    {"prompt": "Implement a Java method named `countOccurrences` that takes a string and a character as input and returns the number of times the character appears in the string, ignoring case.\n\n**Example Usage:**\n```java\nSystem.out.println(countOccurrences(\"Hello, World!\", 'o'));  // Output: 2\nSystem.out.println(countOccurrences(\"Java Programming\", 'a'));  // Output: 3\n```", "length": 200},
    {"prompt": "Write a Java method named `mergeSortedArrays` that takes two sorted arrays of integers as input and returns a new sorted array that is the result of merging the two input arrays.\n\n**Example Usage:**\n```java\nint[] arr1 = {1, 3, 5};\nint[] arr2 = {2, 4, 6};\nSystem.out.println(Arrays.toString(mergeSortedArrays(arr1, arr2)));  // Output: [1, 2, 3, 4, 5, 6]\n```", "length": 200},
    {"prompt": "Create a Java method named `findDuplicates` that takes an array of integers as input and returns a list of duplicate elements in the array.\n\n**Example Usage:**\n```java\nint[] arr = {1, 2, 2, 3, 4, 4, 5};\nSystem.out.println(findDuplicates(arr));  // Output: [2, 4]\n```", "length": 170},
    {"prompt": "Implement a Java method named `isBalancedParentheses` that takes a string containing parentheses as input and returns `true` if the parentheses are balanced, otherwise returns `false`. Balanced parentheses mean that every opening parenthesis has a corresponding closing parenthesis in the correct order.\n\n**Example Usage:**\n```java\nSystem.out.println(isBalancedParentheses(\"(())\"));  // Output: true\nSystem.out.println(isBalancedParentheses(\"(()\"));  // Output: false\n```", "length": 220},
    {"prompt": "Write a Java method named `findKthLargest` that takes an array of integers and an integer `k` as input and returns the `k`-th largest element in the array.\n\n**Example Usage:**\n```java\nint[] arr = {3, 5, 7, 2};\nSystem.out.println(findKthLargest(arr, 2));  // Output: 5\n```", "length": 170},
    {"prompt": "Create a Java method named `reverseWords` that takes a string as input and returns a new string with the words in reverse order. Words are separated by spaces.\n\n**Example Usage:**\n```java\nSystem.out.println(reverseWords(\"Hello World\"));  // Output: \"World Hello\"\nSystem.out.println(reverseWords(\"Java Programming\"));  // Output: \"Programming Java\"\n```", "length": 190},
    {"prompt": "Implement a Java method named `findCommonElements` that takes two arrays of integers as input and returns a list of common elements between the two arrays.\n\n**Example Usage:**\n```java\nint[] arr1 = {1, 2, 3, 4};\nint[] arr2 = {3, 4, 5, 6};\nSystem.out.println(findCommonElements(arr1, arr2));  // Output: [3, 4]\n```", "length": 190},
    {"prompt": "Write a Java method named `isPerfectSquare` that takes an integer `n` as input and returns `true` if `n` is a perfect square, otherwise returns `false`. A perfect square is an integer that is the square of another integer.\n\n**Example Usage:**\n```java\nSystem.out.println(isPerfectSquare(16));  // Output: true\nSystem.out.println(isPerfectSquare(18));  // Output: false\n```", "length": 190},
    {"prompt": "Create a Java method named `findLongestSubstring` that takes a string as input and returns the length of the longest substring without repeating characters.\n\n**Example Usage:**\n```java\nSystem.out.println(findLongestSubstring(\"abcabcbb\"));  // Output: 3\nSystem.out.println(findLongestSubstring(\"bbbbb\"));  // Output: 1\n```", "length": 190},
    {"prompt": "Implement a Java method named `findMedian` that takes an array of integers as input and returns the median value. If the array has an even number of elements, the median is the average of the two middle elements.\n\n**Example Usage:**\n```java\nint[] arr = {1, 3, 5, 7};\nSystem.out.println(findMedian(arr));  // Output: 4.0\nint[] arr2 = {1, 2, 3};\nSystem.out.println(findMedian(arr2));  // Output: 2.0\n```", "length": 220},
    {"prompt": "Write a Java method named `findFirstNonRepeatingChar` that takes a string as input and returns the first non-repeating character in the string. If all characters repeat, the method should return `null`.\n\n**Example Usage:**\n```java\nSystem.out.println(findFirstNonRepeatingChar(\"hello\"));  // Output: 'h'\nSystem.out.println(findFirstNonRepeatingChar(\"aabbcc\"));  // Output: null\n```", "length": 200},
    {"prompt": "Create a Java method named `findPairsWithSum` that takes an array of integers and a target sum as input and returns a list of pairs of elements that add up to the target sum.\n\n**Example Usage:**\n```java\nint[] arr = {1, 2, 3, 4, 5};\nSystem.out.println(findPairsWithSum(arr, 5));  // Output: [[1, 4], [2, 3]]\n```", "length": 190},
    {"prompt": "Implement a Java method named `findPeakElement` that takes an array of integers as input and returns the index of a peak element. A peak element is an element that is greater than or equal to its neighbors.\n\n**Example Usage:**\n```java\nint[] arr = {1, 3, 20, 4, 1, 0};\nSystem.out.println(findPeakElement(arr));  // Output: 2\n```", "length": 190},
    {"prompt": "Write a Java method named `findSubarrayWithSum` that takes an array of integers and a target sum as input and returns the start and end indices of a subarray that adds up to the target sum. If no such subarray exists, return `null`.\n\n**Example Usage:**\n```java\nint[] arr = {1, 4, 20, 3, 10, 5};\nSystem.out.println(Arrays.toString(findSubarrayWithSum(arr, 33)));  // Output: [2, 4]\n```", "length": 220},
    {"prompt": "Create a Java method named `findMajorityElement` that takes an array of integers as input and returns the majority element. A majority element is an element that appears more than `n/2` times in the array, where `n` is the size of the array.\n\n**Example Usage:**\n```java\nint[] arr = {3, 3, 4, 2, 4, 4, 2, 4, 4};\nSystem.out.println(findMajorityElement(arr));  // Output: 4\n```", "length": 200},
    {"prompt": "Implement a Java method named `findKthSmallest` that takes an array of integers and an integer `k` as input and returns the `k`-th smallest element in the array.\n\n**Example Usage:**\n```java\nint[] arr = {3, 5, 7, 2};\nSystem.out.println(findKthSmallest(arr, 2));  // Output: 3\n```", "length": 170},
    {"prompt": "Write a Java method named `findLongestPalindrome` that takes a string as input and returns the longest palindromic substring in the string.\n\n**Example Usage:**\n```java\nSystem.out.println(findLongestPalindrome(\"babad\"));  // Output: \"bab\"\nSystem.out.println(findLongestPalindrome(\"cbbd\"));  // Output: \"bb\"\n```", "length": 190},
    {"prompt": "Create a Java method named `findIntersection` that takes two sorted arrays of integers as input and returns a list of elements that are common to both arrays.\n\n**Example Usage:**\n```java\nint[] arr1 = {1, 2, 3, 4};\nint[] arr2 = {3, 4, 5, 6};\nSystem.out.println(findIntersection(arr1, arr2));  // Output: [3, 4]\n```", "length": 190},
    {"prompt": "Implement a Java method named `findClosestPair` that takes an array of integers and a target sum as input and returns the pair of elements whose sum is closest to the target sum.\n\n**Example Usage:**\n```java\nint[] arr = {1, 3, 4, 7, 10};\nSystem.out.println(Arrays.toString(findClosestPair(arr, 15)));  // Output: [4, 10]\n```", "length": 190},
    {"prompt": "Write a Java method named `findMaxSubarraySum` that takes an array of integers as input and returns the maximum sum of a contiguous subarray.\n\n**Example Usage:**\n```java\nint[] arr = {-2, 1, -3, 4, -1, 2, 1, -5, 4};\nSystem.out.println(findMaxSubarraySum(arr));  // Output: 6\n```", "length": 190},
    {"prompt": "Create a Java method named `findMinRotatedSortedArray` that takes a rotated sorted array of integers as input and returns the minimum element in the array.\n\n**Example Usage:**\n```java\nint[] arr = {4, 5, 6, 7, 0, 1, 2};\nSystem.out.println(findMinRotatedSortedArray(arr));  // Output: 0\n```", "length": 190},
    {"prompt": "Implement a Java method named `findUniqueElement` that takes an array of integers where every element appears twice except for one, and returns the unique element.\n\n**Example Usage:**\n```java\nint[] arr = {2, 3, 4, 3, 2};\nSystem.out.println(findUniqueElement(arr));  // Output: 4\n```", "length": 190},
    {"prompt": "Write a Java method named `findLongestCommonPrefix` that takes an array of strings as input and returns the longest common prefix among all the strings. If there is no common prefix, return an empty string.\n\n**Example Usage:**\n```java\nString[] strs = {\"flower\", \"flow\", \"flight\"};\nSystem.out.println(findLongestCommonPrefix(strs));  // Output: \"fl\"\n```", "length": 220},
    {"prompt": "Create a Java method named `findMissingPositive` that takes an array of integers as input and returns the smallest missing positive integer.\n\n**Example Usage:**\n```java\nint[] arr = {3, 4, -1, 1};\nSystem.out.println(findMissingPositive(arr));  // Output: 2\n```", "length": 170},
    {"prompt": "Implement a Java method named `findDuplicateNumber` that takes an array of integers containing `n + 1` integers where each integer is between 1 and `n` (inclusive) and returns the duplicate number.\n\n**Example Usage:**\n```java\nint[] arr = {1,